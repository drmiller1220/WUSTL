data <- data.frame(ccode = country_indicator, x1 = x1, x2 = x2, x3 = x3)
y <- rpois(100,2)
y <- rnorm(100,1,7)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model <- lmer(y ~ x2 + x3 + (1 | x1), data=data)
model <- lmer(y ~ x1 + x2 + x3 + (1 | ccode) + (x1 | ccode), data=data)
summary(model)
model <- lmer(y ~  x2 + x3 + (1 | ccode) + (x1 | ccode), data=data)
summary(model)
model <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model)
model3 <- lm(y ~ x1 + x2 + x3, data=data)
summary(model3)
library(lme4)
country_indicator <- rep(1:5,20)
x2 <- rep(c(2,3,6,5,4), 20)
x1 <- rnorm(100,2,2)
x3 <- rnorm(100,-1,5)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model1 <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model1)
model3 <- lm(y ~ x1 + x2 + x3, data=data)
summary(model3)
library(lme4)
country_indicator <- rep(1:5,20)
x2 <- rep(c(2,3,6,5,4), 20)
x1 <- rnorm(100,2,2)
x3 <- rnorm(100,-1,5)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model1 <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model1)
model3 <- lm(y ~ x1 + x2 + x3, data=data)
summary(model3)
library(lme4)
country_indicator <- rep(1:5,20)
x2 <- rep(c(2,3,6,5,4), 20)
x1 <- rnorm(100,2,2)
x3 <- rnorm(100,-1,5)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model1 <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model1)
model3 <- lm(y ~ x1 + x2 + x3, data=data)
summary(model3)
library(lme4)
country_indicator <- rep(1:5,20)
x2 <- rep(c(2,3,6,5,4), 20)
x1 <- rnorm(100,2,2)
x3 <- rnorm(100,-1,5)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model1 <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model1)
model3 <- lm(y ~ x1 + x2 + x3, data=data)
summary(model3)
library(lme4)
country_indicator <- rep(1:5,20)
x2 <- rep(c(2,3,6,5,4), 20)
x1 <- rnorm(100,2,2)
x3 <- rnorm(100,-1,5)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model1 <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model1)
model3 <- lm(y ~ x1 + x2 + x3, data=data)
summary(model3)
ilogit(-2.5205)
library(faraway)
ilogit(-2.5205)
ilogit(-3.8568)
1-ilogit(1.4930)-ilogit(-0.0668)-ilogit(-1.5685)-ilogit(-2.5205)-ilogit(-3.8568)-ilogit(-4.9254)-ilogit(-6.0249)-ilogit(-7.0801)
ilogit(-7.0801)
ilogit(1.4930)
1-ilogit(1.4930)
ilogit(-2.5205)-ilogit(-3.8568)
y <- c(5.4, 8.3, 10.5, 13.2, 16.9, 20.4)
x <- c(1,2,3,4,5,6)
lm(y~x)
.3425^2+.2855^2+.4715^2+.7285^2+.0145^2+.5575^2
(.3425^2+.2855^2+.4715^2+.7285^2+.0145^2+.5575^2)/4
1^2+2^2+3^2+4^2+5^2+6^2
(91*0.3157144)/(6*17.5)
summary(lm(y~x))
sqrt(0.2736191)
0.3157144/17.5
sqrt(0.3157144/17.5)
7+3+6+8+4+8+5
7+3+6+8+4+8+5+7
var(c(7,3,6,8,4,8,5))
var(c(7,3,6,8,4,8,5, 7))
inverse_matrix <- matrix(c(-0.06, 0.07, 0.06, -0.2, -0.6, 1.2, 0.08, -0.06, -0.08), nrow=3)
inverse_matrix
inverse_matrix <- matrix(c(-0.06, 0.07, 0.06, -0.2, -0.6, 1.2, 0.08, -0.06, -0.08), nrow=3, byrow=TRUE)
inverse_matrix
X_matrix <- matrix(c(60, 40, 30, 1, 0, 1, 60000, 30000, 25000), nrow=3, byrow=TRUE)
X_matrix
inverse_matrix%*%X_matrix
Y_matrix <- matrix(c(2300, 1000, 1300), nrow=3, byrow=TRUE)
Y_matrix
inverse_matrix%*%X_matrix%*%Y_matrix
data <- data.frame(age=c(60,40,30), know=c(1,0,1), income=c(60000,30000,25000))
data
data <- data.frame(age=c(60,40,30), know=c(1,0,1), income=c(60000,30000,25000), donation=c(2300,1000,1300))
data
summary(lm(donation~age + know + income, data=data))
summary(lm(donation~age + know + income -1, data=data))
12017232*50+240554440-16022856*48000
evs <- c(5, 8, 3, 12, 4, 6, 9)
mu <- c(0.49, 0.45, 0.63, 0.51, 0.42, 0.47, 0.48)
sigma <- c(0.03, 0.03, 0.05, 0.025, 0.05, 0.03, 0.025)
pvs <- rnorm(1, mu, sigma)
pvs <- rnorm(1, mu, sigma)
pvs <- rnorm(1, mu[1], sigma[1])
pvs <- rnorm(1, mu[1], sigma[1])
pvs <- rnorm(1, mu[1], sigma[1])
pvs <- rnorm(1, mu[7], sigma[7])
pvs <- rnorm(1, mu[7], sigma[7])
pvs <- rnorm(1, mu[7], sigma[7])
pvs <- rnorm(1, mu[7], sigma[7])
pvs <- NULL
for(i in 1:length(evs)){
pvs <- rnorm(1, mu[i], sigma[i])
}
pvs <- NULL
for(i in 1:length(evs)){
pvs[i] <- rnorm(1, mu[i], sigma[i])
}
state_wins <- ifelse(pvs>0.5, 1, 0)
evs <- state_wins*pvs
elect_votes <- state_wins*evs
evs <- c(5, 8, 3, 12, 4, 6, 9)
mu <- c(0.49, 0.45, 0.63, 0.51, 0.42, 0.47, 0.48)
sigma <- c(0.03, 0.03, 0.05, 0.025, 0.05, 0.03, 0.025)
pvs <- NULL
for(i in 1:length(evs)){
pvs[i] <- rnorm(1, mu[i], sigma[i])
state_wins <- ifelse(pvs>0.5, 1, 0)
elect_votes <- state_wins*evs
}
evs <- c(5, 8, 3, 12, 4, 6, 9)
mu <- c(0.49, 0.45, 0.63, 0.51, 0.42, 0.47, 0.48)
sigma <- c(0.03, 0.03, 0.05, 0.025, 0.05, 0.03, 0.025)
pvs <- NULL
for(i in 1:length(evs)){
pvs[i] <- rnorm(1, mu[i], sigma[i])
state_wins <- ifelse(pvs>0.5, 1, 0)
elect_votes <- state_wins*evs
}
pvs <- NULL
pvs <- NULL
for(i in 1:length(evs)){
pvs[i] <- rnorm(1, mu[i], sigma[i])
state_wins <- ifelse(pvs>0.5, 1, 0)
}
elect_votes <- state_wins*evs
evs <- c(5, 8, 3, 12, 4, 6, 9)
mu <- c(0.49, 0.45, 0.63, 0.51, 0.42, 0.47, 0.48)
sigma <- c(0.03, 0.03, 0.05, 0.025, 0.05, 0.03, 0.025)
pvs <- NULL
for(i in 1:length(evs)){
pvs[i] <- rnorm(1, mu[i], sigma[i])
}
state_wins <- ifelse(pvs>0.5, 1, 0)
elect_votes <- state_wins*evs
evs <- c(5, 8, 3, 12, 4, 6, 9)
mu <- c(0.49, 0.45, 0.63, 0.51, 0.42, 0.47, 0.48)
sigma <- c(0.03, 0.03, 0.05, 0.025, 0.05, 0.03, 0.025)
pvs <- NULL
for(i in 1:length(evs)){
pvs[i] <- rnorm(1, mu[i], sigma[i])
}
state_wins <- ifelse(pvs>0.5, 1, 0)
elect_votes <- state_wins*evs
evs <- c(5, 8, 3, 12, 4, 6, 9)
mu <- c(0.49, 0.45, 0.63, 0.51, 0.42, 0.47, 0.48)
sigma <- c(0.03, 0.03, 0.05, 0.025, 0.05, 0.03, 0.025)
pvs <- NULL
for(i in 1:length(evs)){
pvs[i] <- rnorm(1, mu[i], sigma[i])
}
state_wins <- ifelse(pvs>0.5, 1, 0)
elect_votes <- state_wins*evs
evs <- c(5, 8, 3, 12, 4, 6, 9)
mu <- c(0.49, 0.45, 0.63, 0.51, 0.42, 0.47, 0.48)
sigma <- c(0.03, 0.03, 0.05, 0.025, 0.05, 0.03, 0.025)
pvs <- NULL
for(i in 1:length(evs)){
pvs[i] <- rnorm(1, mu[i], sigma[i])
}
state_wins <- ifelse(pvs>0.5, 1, 0)
elect_votes <- state_wins*evs
library(lme4)
country_indicator <- rep(1:5,20)
x2 <- rep(c(2,3,6,5,4), 20)
x1 <- rnorm(100,2,2)
x3 <- rnorm(100,-1,5)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model1 <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model1)
model3 <- lm(y ~ x1 + x2 + x3, data=data)
summary(model3)
country_indicator <- rep(1:5,20)
x2 <- rep(c(2,3,6,5,4), 20)
x1 <- rnorm(100,2,2)
x3 <- rnorm(100,-1,5)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model1 <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model1)
model3 <- lm(y ~ x1 + x2 + x3, data=data)
summary(model3)
summary(model1)
summary(model3)
model3 <- lm(y ~ as.factor(x1) + x2 + x3, data=data)
summary(model3)
model3 <- lm(y ~ as.factor(country_indicator) + x1 + x3, data=data)
summary(model3)
summary(model1)
options(scipen=999)
summary(model1)
country_indicator <- rep(1:5,20)
x2 <- rep(c(2,3,6,5,4), 20)
x1 <- rnorm(100,2,2)
x3 <- rnorm(100,-1,5)
y <- rnorm(100,1,1)
data <- data.frame(ccode = country_indicator, y = y, x1 = x1, x2 = x2, x3 = x3)
model1 <- lmer(y ~  x2 + x3 + (1 +x1 | ccode), data=data)
summary(model1)
model3 <- lm(y ~ as.factor(ccode) + x1 + x3, data=data)
summary(model3)
ilogit(-2.5205)-ilogit(-3.8568)
library(arm)
ilogit(-2.5205)-ilogit(-3.8568)
library(faraway)
ilogit(-2.5205)-ilogit(-3.8568)
library(XML)
tables <- readHTMLTable("https://www.senate.gov/reference/Legislation/Vetoes/ObamaBH.htm")
tables <- readHTMLTable("https://www.senate.gov/reference/Legislation/Vetoes/ObamaBH")
install.packages("htmltab")
library(htmltab)
tables <- htmltab("https://www.senate.gov/reference/Legislation/Vetoes/ObamaBH.htm")
View(tables)
tables <- htmltab("https://www.senate.gov/reference/Legislation/Vetoes/ObamaBH.htm", which = "table")
url <- "http://christianrubba.com/cran/htmltab/vignette/Demography%20of%20the%20United%20Kingdom%20-%20Wikipedia.html"
ukLang <- htmltab(doc = url, which = "//th[text() = 'Ability']/ancestor::table")
tables <- htmltab("https://www.senate.gov/reference/Legislation/Vetoes/ObamaBH.htm", which = c(0))
tables <- htmltab("https://www.senate.gov/reference/Legislation/Vetoes/ObamaBH.htm", which = c(1))
tables <- htmltab("https://www.senate.gov/reference/Legislation/Vetoes/ObamaBH.htm", which = c(2))
View(tables)
tables <- NULL
extensions <- ("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
extensions <- c("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
tables <- NULL
extensions <- c("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
for(i in 1:length(extensions)){
pres_table <- htmltab(c("https://www.senate.gov/reference/Legislation/Vetoes/"extensions[i]), which = c(2))
colnames(pres_table) <- NULL
tables <- rbind(pres_table)
}
tables <- NULL
extensions <- c("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
for(i in 1:length(extensions)){
pres_table <- htmltab(c("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[i]), which = c(2))
colnames(pres_table) <- NULL
tables <- rbind(pres_table)
}
c("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[i])
paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[i]
)
for(i in 1:length(extensions)){
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[i]), which = c(2))
colnames(pres_table) <- NULL
tables <- rbind(pres_table)
}
tables <- NULL
extensions <- c("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
for(i in 1:length(extensions)){
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[i]), which = c(2))
colnames(pres_table) <- NULL
tables <- rbind(table, pres_table)
}
tables <- NULL
extensions <- c("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
for(i in 1:length(extensions)){
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[i]), which = c(2))
colnames(pres_table) <- NULL
tables <- rbind(tables, pres_table)
}
tables <- NULL
extensions <- c("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
for(i in 1:length(extensions)){
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[i]), which = c(2))
colnames(pres_table) <- NULL
tables <- rbind(tables, pres_table)
}
View(pres_table)
View(tables)
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[10]), which = c(2))
View(pres_table)
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[9]), which = c(2))
View(pres_table)
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[8]), which = c(2))
View(pres_table)
View(tables)
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[7]), which = c(2))
View(pres_table)
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[1]), which = c(2))
View(pres_table)
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[1]), which = c(2), rm_nodata_cols = F)
tables <- NULL
extensions <- c("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
for(i in 1:length(extensions)){
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[1]), which = c(2), rm_nodata_cols = F)
colnames(pres_table) <- NULL
tables <- rbind(tables, pres_table)
}
tables <- NULL
extensions <- c("KennedyJF.htm", "JohnsonLB.htm", "NixonR.htm", "FordG.htm", "CarterJ.htm", "ReaganR.htm", "BushGHW.htm", "ClintonWJ.htm", "BushGW.htm", "ObamaBH.htm")
for(i in 1:length(extensions)){
pres_table <- htmltab(paste0("https://www.senate.gov/reference/Legislation/Vetoes/", extensions[i]), which = c(2), rm_nodata_cols = F)
colnames(pres_table) <- NULL
tables <- rbind(tables, pres_table)
}
setwd("C:\\Users\\drmiller1220\\Documents\\GitHub\\WUSTL\\HW4")
library(glmnet)
load("C:\\Users\\drmiller1220\\Documents\\GitHub\\WUSTL\\StudentDrinking.RData")
X <- as.data.frame(X)
ols_model <- lm(alcohol ~., data = X)
summary(ols_model)
X <- as.matrix(X)
lasso_model <- cv.glmnet(x = X, y = alcohol, alpha = 1, nfolds=10, family="gaussian", type.measure="mse")
coef(lasso_model, s=lasso_model$lambda)
ridge_model <- cv.glmnet(x = X, y = alcohol, alpha = 0, nfolds=10, family="gaussian", type.measure="mse")
coef(ridge_model, s=ridge_model$lambda)
elasticnet_model <- cv.glmnet(x = X, y = alcohol, alpha = 0.5, nfolds=10, family="gaussian", type.measure="mse")
coef(elasticnet_model, s=ridge_model$lambda)
coef(elasticnet_model, s=ridge_model$lambda)[56]
coef(elasticnet_model, s=ridge_model$lambda)[,56]
coef(elasticnet_model, s=ridge_model$lambda)[,100]
coef(elasticnet_model, s=ridge_model$lambda)[,98]
coef(elasticnet_model, s=ridge_model$lambda)[,99]
coef(elasticnet_model, s=ridge_model$lambda)[,80]
coef(elasticnet_model, s=ridge_model$lambda)[,50]
setwd("C:\\Users\\drmiller1220\\Documents\\GitHub\\WUSTL\\HW4")
library(glmnet)
load("C:\\Users\\drmiller1220\\Documents\\GitHub\\WUSTL\\StudentDrinking.RData")
X <- as.data.frame(X)
# OLS
ols_model <- lm(alcohol ~., data = X)
summary(ols_model)
X <- as.matrix(X)
# LASSO
lasso_model <- cv.glmnet(x = X, y = alcohol, alpha = 1, nfolds=10, family="gaussian", type.measure="mse")
lasso_coefs <- coef(lasso_model, s=lasso_model$lambda)
# ridge
ridge_model <- cv.glmnet(x = X, y = alcohol, alpha = 0, nfolds=10, family="gaussian", type.measure="mse")
ridge_coefs <- coef(ridge_model, s=ridge_model$lambda)
# elastic-net with alpha=0.5
# LASSO and ridge both induce penalties for the coefficients based on model complexity, but the
# penalties take slightly different forms (in LASSO the penalty is the absolute value of each beta,
# while in ridge the penalty is the square of each beta).  Whereas LASSO regression induces sparsity
# in the model, such that regression coefficients "shrink" to 0 if they do not contribute to the
# model, ridge regression does not shrink the coefficients and only helps with variable
# selection.  In elastic-net, we combine both types of penalties, and our selected value of alpha
# indicates the contribution of each penalty to the model.  As alpha increases (decreases), the model
# is more informed by the ridge (LASSO) penalty component.  By selecting alpha=0.5, we are equally
# weighting the penalties.
elasticnet_model <- cv.glmnet(x = X, y = alcohol, alpha = 0.5, nfolds=10, family="gaussian", type.measure="mse")
elasticnet_coefs <- coef(elasticnet_model, s=ridge_model$lambda)
ridge_model$lambda
elasticnet_coefs@x
374/99
374/21
elasticnet_coefs@factors
elasticnet_coefs@Dimnames
elasticnet_coefs[99]
elasticnet_coefs
elasticnet_coefs[,56]
elasticnet_coefs[,56]$male
elasticnet_coefs["male",56]
elasticnet_coefs@Dim[2]
elasticnet_coefs <- coef(elasticnet_model, s=elasticnet_model$lambda)
elasticnet_coefs
for(i in 1:elasticnet_coefs@Dim[2]){
eln_male <- append(eln_male, elasticnet_coefs["male",i])
}
eln_male <- NULL
for(i in 1:elasticnet_coefs@Dim[2]){
eln_male <- append(eln_male, elasticnet_coefs["male",i])
}
ridge_male <- NULL
for(i in 1:ridge_coefs@Dim[2]){
ridge_male <- append(ridge_male, ridge_coefs["male",i])
}
ridge_model <- cv.glmnet(x = X, y = alcohol, alpha = 0, nfolds=10, family="gaussian", type.measure="mse")
ridge_coefs <- coef(ridge_model, s=ridge_model$lambda)
ridge_coefs@Dim[2]
ridge_male <- NULL
for(i in 1:ridge_coefs@Dim[2]){
ridge_male <- append(ridge_male, ridge_coefs["male",i])
}
lasso_model <- cv.glmnet(x = X, y = alcohol, alpha = 1, nfolds=10, family="gaussian", type.measure="mse")
lasso_coefs <- coef(lasso_model, s=lasso_model$lambda)
lasso_male <- NULL
for(i in 1:lasso_coefs@Dim[2]){
lasso_male <- append(lasso_male, lasso_coefs["male",i])
}
lasso_model$lambda
plot(y=lasso_male, x=lasso_model$lambda)
plot(y=lasso_male, x=lasso_model$lambda, type=l)
plot(y=lasso_male, x=lasso_model$lambda, type="l")
plot(y=lasso_male, x=lasso_model$lambda, type="l", col="forestgreen")
ols_model$coefficients
abline(h=ols_model$coefficients["male"])
plot(y=lasso_male, x=lasso_model$lambda, type="l", col="forestgreen", ylab="Male Coef",
xlab="Lambda", main="LASSO", ylim = c(0, 1.2))
abline(h=ols_model$coefficients["male"])
plot(y=lasso_male, x=lasso_model$lambda, type="l", col="forestgreen", ylab="Male Coef",
xlab="Lambda", main="LASSO", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
plot(y=ridge_male, x=ridge_model$lambda, type="l", col="forestgreen", ylab="Male Coef",
xlab="Lambda", main="Ridge", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
ridge_model$lambda
ridge_male
plot(y=ridge_male, x=ridge_model$lambda, type="l", col="firebrick1", ylab="Male Coef",
xlab="Lambda", main="Ridge", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
plot(y=elasticnet_male, x=elasticnet_model$lambda, type="l", col="firebrick1", ylab="Male Coef",
xlab="Lambda", main="Elastic Net", ylim = c(0, 1.1))
plot(y=eln_male, x=eln$lambda, type="l", col="firebrick1", ylab="Male Coef",
xlab="Lambda", main="Elastic Net", ylim = c(0, 1.1))
plot(y=eln_male, x=elasticnet_model$lambda, type="l", col="firebrick1", ylab="Male Coef",
xlab="Lambda", main="Elastic Net", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
layout(matrix(c(1,2,3), nrow=1, byrow=TRUE),
heights = c(0.33, 0.34, 0.33))
plot(y=lasso_male, x=lasso_model$lambda, type="l", col="forestgreen", ylab="Male Coef",
xlab="Lambda", main="LASSO", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
plot(y=ridge_male, x=ridge_model$lambda, type="l", col="firebrick1", ylab="Male Coef",
xlab="Lambda", main="Ridge", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
plot(y=eln_male, x=elasticnet_model$lambda, type="l", col="firebrick1", ylab="Male Coef",
xlab="Lambda", main="Elastic Net", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
ridge_model$lambda
ridge_male
layout(matrix(c(1,2,3), nrow=1, byrow=TRUE),
heights = c(0.33, 0.34, 0.33))
plot(y=lasso_male, x=lasso_model$lambda, type="l", col="forestgreen", ylab="Male Coef",
xlab="Lambda", main="LASSO", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
plot(y=ridge_male, x=ridge_model$lambda, type="l", col="firebrick1", ylab="Male Coef",
xlab="Lambda", main="Ridge", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
plot(y=eln_male, x=elasticnet_model$lambda, type="l", col="dodgerblue", ylab="Male Coef",
xlab="Lambda", main="Elastic Net", ylim = c(0, 1.1))
abline(h=ols_model$coefficients["male"])
validation_x <- X[1:20,]
validation_y <- alcohol[1:20]
training_x <- X[1:20,]
training_x <- X[-1:20,]
training_x <- X[-c(1:20),]
training_y <- alcohol[-c(1:20)]
folds <- seq(1, 375, by = 375/10)
folds
folds <- c(floor(folds), 375)
folds
split(training_x)
split(training_x, 20)
sample(1:10, dim(training_x)[1], replace = TRUE)
split(training_x, sample(1:10, dim(training_x)[1], replace = TRUE))
new <- split(training_x, sample(1:10, dim(training_x)[1], replace = TRUE))
new$`1`
View(training_x)
assignment <- sample(1:10, dim(training_x)[1], replace = TRUE)
assignment
folds <- seq(1, nrow(training_x), by = nrow(training_x)/10)
folds <- c(floor(folds), nrow(training_x))
for(i in 1:10){
valid_obs <- folds[i]:folds[i+1]
print(i)
}
for(i in 1:10){
valid_obs <- folds[i]:folds[i+1]
print(valid_obs)
}
training_data <- {}
assignment <- sample(1:10, dim(training_x)[1], replace = TRUE)
for(i in 1:10){
selected <- i == assignment
selected_df <- training_x[selected,]
training_data[[i]] <- selected_df
}
training_data[[1]]
training_data[[2]]
training_data[[3]]
training_data[[4]]
training_data[[5]]
i=1
to_train <- training_data[[-i]]
to_train <- data.frame(matrix(unlist(to_train), byrow=T))
to_train <- training_data[[-i]]
to_train[1]
training_data[1]
to_train <- training_data[-i]
to_train <- data.frame(matrix(unlist(to_train), byrow=T))
